kmp algorithm
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int j=0;
    string txt,s;
    cin>>txt>>s;
    vector<int>v;
    v.push_back(0);
    for(int i=1;i<s.size();i++){
        if(s[j]==s[i]){
            v.push_back(j+1);
            j=j+1;
        }
        else{
            if((j-1)<=0){
                v.push_back(0);
            }
            j=v[i];
        }
    }
    int x=0,c=0;
    vector<int>f;
    for(int k=0;k<txt.size();k++){
        if(x<s.size()){
            if(txt[k]==s[x]){
                x+=1;
            }
            else{
                x=v[x];
            }
        }
        else{
            if(x==s.size()){
                f.push_back(x-k);
                x=v[x-1];
                c+=1;
            }
        }
    }
    if(x==s.size()){
        c+=1;
        f.push_back(txt.size()-x);
    }
    for(int h=0;h<f.size();h++){
        cout<<f[h];
    }
}
